
/*
 * This file was generated by the SOM Compiler.
 * FileName: wprootf.xh.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitxh: 1.11
 */

/*
 * 
 *  Module Header
 * 
 *  Module Name: WPROOTF
 * 
 *  OS/2 Presentation Manager Workplace class definitions
 * 
 *  Copyright (c) International Business Machines Corporation 1991, 1992
 * 
 */

#ifndef wprootf_xh
#define wprootf_xh
class WPRootFolder;

#define WPRootFolder_MajorVersion 1
#define WPRootFolder_MinorVersion 2

/* C++ som defs */
#include <somcls.xh>

/* C++ parent def */
#ifndef wpfolder_xh
#include "wpfolder.xh"
#endif

#ifndef WPRootFolder_API
#define WPRootFolder_API
/*
 * The Class API
 */

/* A procedure to create the WPRootFolder Class */
SOMEXTERN SOMClass * SOMLINK WPRootFolderNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* A macro to return the WPRootFolder class object */
class M_WPRootFolder;
#define _WPRootFolder ((M_WPRootFolder*)WPRootFolderClassData.classObject)

/* The static interface to WPRootFolder and its instances */
SOMEXTERN struct WPRootFolderClassDataStructure {
	SOMClass *classObject;
	somMToken wpSetViewTitle;
} WPRootFolderClassData;

/*
 * -- Typedefs for Procedures that support WPRootFolder Methods
 */
extern "C" {
}


#endif /* WPRootFolder_API */


/*
 * -- The C++ Wrapper Class for WPRootFolder
 */
class WPRootFolder : public WPFolder
{
public:

void *operator new(size_t size)
{
   (void) size;
   if (!WPRootFolderClassData.classObject) 
      WPRootFolderNewClass(WPRootFolder_MajorVersion,WPRootFolder_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somResolve(SOM_TestCls((SOMAny *)(WPRootFolderClassData.classObject),
                             SOMClassClassData.classObject),
                 SOMClassClassData.somNew))
         ((SOMClass*)(WPRootFolderClassData.classObject));
}

void operator delete(void * obj)
{
   ((SOMObject *)obj)->somFree();
}


};   /* WPRootFolder */



#endif       /* wprootf_xh */

/*
 * This file was generated by the SOM Compiler.
 * FileName: wprootf.xh.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitxh: 1.11
 */
#ifndef wprootf_mxh
#define wprootf_mxh
class M_WPRootFolder;

#define M_WPRootFolder_MajorVersion 1
#define M_WPRootFolder_MinorVersion 2

/* C++ som defs */
#include <somcls.xh>

/* C++ parent def */
#ifndef wpfolder_xh
#include "wpfolder.xh"
#endif

#ifndef M_WPRootFolder_API
#define M_WPRootFolder_API
/*
 * The Class API
 */

/* A procedure to create the M_WPRootFolder Class */
SOMEXTERN SOMClass * SOMLINK M_WPRootFolderNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* A macro to return the M_WPRootFolder class object */
#define _M_WPRootFolder ((SOMClass*)M_WPRootFolderClassData.classObject)

/* The static interface to M_WPRootFolder and its instances */
SOMEXTERN struct M_WPRootFolderClassDataStructure {
	SOMClass *classObject;
} M_WPRootFolderClassData;

/*
 * -- Typedefs for Procedures that support M_WPRootFolder Methods
 */
extern "C" {
}


#endif /* M_WPRootFolder_API */


/*
 * -- The C++ Wrapper Class for M_WPRootFolder
 */
class M_WPRootFolder : public M_WPFolder
{
public:

void *operator new(size_t size)
{
   (void) size;
   if (!M_WPRootFolderClassData.classObject) 
      M_WPRootFolderNewClass(M_WPRootFolder_MajorVersion,M_WPRootFolder_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somResolve(SOM_TestCls((SOMAny *)(M_WPRootFolderClassData.classObject),
                             SOMClassClassData.classObject),
                 SOMClassClassData.somNew))
         ((SOMClass*)(M_WPRootFolderClassData.classObject));
}

void operator delete(void * obj)
{
   ((SOMObject *)obj)->somFree();
}


};   /* M_WPRootFolder */



#endif       /* wprootf_mxh */
