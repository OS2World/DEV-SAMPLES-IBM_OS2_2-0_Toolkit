
/*
 * This file was generated by the SOM Compiler.
 * FileName: wpqdr.xh.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitxh: 1.11
 */

/*
 * 
 *  Module Header
 * 
 *  Module Name: WPQDR
 * 
 *  OS/2 Presentation Manager Workplace class definitions
 * 
 *  Copyright (c) International Business Machines Corporation 1991, 1992
 * 
 */

#ifndef wpqdr_xh
#define wpqdr_xh
class WPQdr;

#define WPQdr_MajorVersion 1
#define WPQdr_MinorVersion 1

/* C++ som defs */
#include <somcls.xh>

/* C++ parent def */
#ifndef wptrans_xh
#include "wptrans.xh"
#endif

#ifndef WPQdr_API
#define WPQdr_API
/*
 * The Class API
 */

/* A procedure to create the WPQdr Class */
SOMEXTERN SOMClass * SOMLINK WPQdrNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* A macro to return the WPQdr class object */
class M_WPQdr;
#define _WPQdr ((M_WPQdr*)WPQdrClassData.classObject)

/* The static interface to WPQdr and its instances */
SOMEXTERN struct WPQdrClassDataStructure {
	SOMClass *classObject;
	somMToken prtGetQDriverInfo;
	somMToken prtSetQDriverInfo;
	somMToken prtSetQdrIcon;
	somMToken prtSetQDriverDiscardhwndDlg;
	somMToken prtSetQDriverInstallhwndDlg;
} WPQdrClassData;

/*
 * -- Typedefs for Procedures that support WPQdr Methods
 */
extern "C" {
}


#endif /* WPQdr_API */


/*
 * -- The C++ Wrapper Class for WPQdr
 */
class WPQdr : public WPTransient
{
public:

void *operator new(size_t size)
{
   (void) size;
   if (!WPQdrClassData.classObject) 
      WPQdrNewClass(WPQdr_MajorVersion,WPQdr_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somResolve(SOM_TestCls((SOMAny *)(WPQdrClassData.classObject),
                             SOMClassClassData.classObject),
                 SOMClassClassData.somNew))
         ((SOMClass*)(WPQdrClassData.classObject));
}

void operator delete(void * obj)
{
   ((SOMObject *)obj)->somFree();
}


};   /* WPQdr */



#endif       /* wpqdr_xh */

/*
 * This file was generated by the SOM Compiler.
 * FileName: wpqdr.xh.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitxh: 1.11
 */
#ifndef wpqdr_mxh
#define wpqdr_mxh
class M_WPQdr;

#define M_WPQdr_MajorVersion 1
#define M_WPQdr_MinorVersion 1

/* C++ som defs */
#include <somcls.xh>

/* C++ parent def */
#ifndef wptrans_xh
#include "wptrans.xh"
#endif

#ifndef M_WPQdr_API
#define M_WPQdr_API
/*
 * The Class API
 */

/* A procedure to create the M_WPQdr Class */
SOMEXTERN SOMClass * SOMLINK M_WPQdrNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* A macro to return the M_WPQdr class object */
#define _M_WPQdr ((SOMClass*)M_WPQdrClassData.classObject)

/* The static interface to M_WPQdr and its instances */
SOMEXTERN struct M_WPQdrClassDataStructure {
	SOMClass *classObject;
} M_WPQdrClassData;

/*
 * -- Typedefs for Procedures that support M_WPQdr Methods
 */
extern "C" {
}


#endif /* M_WPQdr_API */


/*
 * -- The C++ Wrapper Class for M_WPQdr
 */
class M_WPQdr : public M_WPTransient
{
public:

void *operator new(size_t size)
{
   (void) size;
   if (!M_WPQdrClassData.classObject) 
      M_WPQdrNewClass(M_WPQdr_MajorVersion,M_WPQdr_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somResolve(SOM_TestCls((SOMAny *)(M_WPQdrClassData.classObject),
                             SOMClassClassData.classObject),
                 SOMClassClassData.somNew))
         ((SOMClass*)(M_WPQdrClassData.classObject));
}

void operator delete(void * obj)
{
   ((SOMObject *)obj)->somFree();
}


};   /* M_WPQdr */



#endif       /* wpqdr_mxh */
