
/*
 * This file was generated by the SOM Compiler.
 * FileName: wincfg.xh.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitxh: 1.11
 */

/*
 * 
 *  Module Header
 * 
 *  Module Name: WPWinConfig
 * 
 *  OS/2 Presentation Manager Workplace class definitions
 * 
 *  Copyright (c) International Business Machines Corporation 1991, 1992
 * 
 */

#ifndef wincfg_xh
#define wincfg_xh
class WPWinConfig;

#define WPWinConfig_MajorVersion 1
#define WPWinConfig_MinorVersion 2

/* C++ som defs */
#include <somcls.xh>

/* C++ parent def */
#ifndef wpabs_xh
#include "wpabs.xh"
#endif

#ifndef WPWinConfig_API
#define WPWinConfig_API
/*
 * The Class API
 */

/* A procedure to create the WPWinConfig Class */
SOMEXTERN SOMClass * SOMLINK WPWinConfigNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* A macro to return the WPWinConfig class object */
class M_WPWinConfig;
#define _WPWinConfig ((M_WPWinConfig*)WPWinConfigClassData.classObject)

/* The static interface to WPWinConfig and its instances */
SOMEXTERN struct WPWinConfigClassDataStructure {
	SOMClass *classObject;
	somMToken wpAddDDEPage;
	somMToken wpAddSessionPage;
	somMToken wpAddSession31Page;
} WPWinConfigClassData;

/*
 * -- Typedefs for Procedures that support WPWinConfig Methods
 */
extern "C" {
typedef ULONG    (SOMLINK *somTD_WPWinConfig_wpAddDDEPage)(WPWinConfig *somSelf,HWND hwndNotebook);
typedef ULONG    (SOMLINK *somTD_WPWinConfig_wpAddSessionPage)(WPWinConfig *somSelf,HWND hwndNotebook);
typedef ULONG    (SOMLINK *somTD_WPWinConfig_wpAddSession31Page)(WPWinConfig *somSelf,HWND hwndNotebook);
}


#endif /* WPWinConfig_API */


/*
 * -- The C++ Wrapper Class for WPWinConfig
 */
class WPWinConfig : public WPAbstract
{
public:

void *operator new(size_t size)
{
   (void) size;
   if (!WPWinConfigClassData.classObject) 
      WPWinConfigNewClass(WPWinConfig_MajorVersion,WPWinConfig_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somResolve(SOM_TestCls((SOMAny *)(WPWinConfigClassData.classObject),
                             SOMClassClassData.classObject),
                 SOMClassClassData.somNew))
         ((SOMClass*)(WPWinConfigClassData.classObject));
}

void operator delete(void * obj)
{
   ((SOMObject *)obj)->somFree();
}

/* public method: wpAddDDEPage */
ULONG    wpAddDDEPage(HWND hwndNotebook)
{
   return (ULONG) SOM_Resolve((SOMAny *)this,WPWinConfig,wpAddDDEPage)
	(this,hwndNotebook);
}


/* public method: wpAddSessionPage */
ULONG    wpAddSessionPage(HWND hwndNotebook)
{
   return (ULONG) SOM_Resolve((SOMAny *)this,WPWinConfig,wpAddSessionPage)
	(this,hwndNotebook);
}


/* public method: wpAddSession31Page */
ULONG    wpAddSession31Page(HWND hwndNotebook)
{
   return (ULONG) SOM_Resolve((SOMAny *)this,WPWinConfig,wpAddSession31Page)
	(this,hwndNotebook);
}



};   /* WPWinConfig */



#endif       /* wincfg_xh */

/*
 * This file was generated by the SOM Compiler.
 * FileName: wincfg.xh.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitxh: 1.11
 */
#ifndef wincfg_mxh
#define wincfg_mxh
class M_WPWinConfig;

#define M_WPWinConfig_MajorVersion 1
#define M_WPWinConfig_MinorVersion 2

/* C++ som defs */
#include <somcls.xh>

/* C++ parent def */
#ifndef wpabs_xh
#include "wpabs.xh"
#endif

#ifndef M_WPWinConfig_API
#define M_WPWinConfig_API
/*
 * The Class API
 */

/* A procedure to create the M_WPWinConfig Class */
SOMEXTERN SOMClass * SOMLINK M_WPWinConfigNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* A macro to return the M_WPWinConfig class object */
#define _M_WPWinConfig ((SOMClass*)M_WPWinConfigClassData.classObject)

/* The static interface to M_WPWinConfig and its instances */
SOMEXTERN struct M_WPWinConfigClassDataStructure {
	SOMClass *classObject;
} M_WPWinConfigClassData;

/*
 * -- Typedefs for Procedures that support M_WPWinConfig Methods
 */
extern "C" {
}


#endif /* M_WPWinConfig_API */


/*
 * -- The C++ Wrapper Class for M_WPWinConfig
 */
class M_WPWinConfig : public M_WPAbstract
{
public:

void *operator new(size_t size)
{
   (void) size;
   if (!M_WPWinConfigClassData.classObject) 
      M_WPWinConfigNewClass(M_WPWinConfig_MajorVersion,M_WPWinConfig_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somResolve(SOM_TestCls((SOMAny *)(M_WPWinConfigClassData.classObject),
                             SOMClassClassData.classObject),
                 SOMClassClassData.somNew))
         ((SOMClass*)(M_WPWinConfigClassData.classObject));
}

void operator delete(void * obj)
{
   ((SOMObject *)obj)->somFree();
}


};   /* M_WPWinConfig */



#endif       /* wincfg_mxh */
