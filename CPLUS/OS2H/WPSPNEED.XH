
/*
 * This file was generated by the SOM Compiler.
 * FileName: wpspneed.xh.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitxh: 1.11
 */

/*
 * 
 *  Module Header
 * 
 *  Module Name: WPSPNEED
 * 
 *  OS/2 Presentation Manager Workplace class definitions
 * 
 *  Copyright (c) International Business Machines Corporation 1991, 1992
 * 
 */

#ifndef wpspneed_xh
#define wpspneed_xh
class WPSpecialNeeds;

#define WPSpecialNeeds_MajorVersion 1
#define WPSpecialNeeds_MinorVersion 2

/* C++ som defs */
#include <somcls.xh>

/* C++ parent def */
#ifndef wpabs_xh
#include "wpabs.xh"
#endif

#ifndef WPSpecialNeeds_API
#define WPSpecialNeeds_API
/*
 * The Class API
 */

/* A procedure to create the WPSpecialNeeds Class */
SOMEXTERN SOMClass * SOMLINK WPSpecialNeedsNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* A macro to return the WPSpecialNeeds class object */
class M_WPSpecialNeeds;
#define _WPSpecialNeeds ((M_WPSpecialNeeds*)WPSpecialNeedsClassData.classObject)

/* The static interface to WPSpecialNeeds and its instances */
SOMEXTERN struct WPSpecialNeedsClassDataStructure {
	SOMClass *classObject;
} WPSpecialNeedsClassData;

/*
 * -- Typedefs for Procedures that support WPSpecialNeeds Methods
 */
extern "C" {
}


#endif /* WPSpecialNeeds_API */


/*
 * -- The C++ Wrapper Class for WPSpecialNeeds
 */
class WPSpecialNeeds : public WPAbstract
{
public:

void *operator new(size_t size)
{
   (void) size;
   if (!WPSpecialNeedsClassData.classObject) 
      WPSpecialNeedsNewClass(WPSpecialNeeds_MajorVersion,WPSpecialNeeds_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somResolve(SOM_TestCls((SOMAny *)(WPSpecialNeedsClassData.classObject),
                             SOMClassClassData.classObject),
                 SOMClassClassData.somNew))
         ((SOMClass*)(WPSpecialNeedsClassData.classObject));
}

void operator delete(void * obj)
{
   ((SOMObject *)obj)->somFree();
}


};   /* WPSpecialNeeds */



#endif       /* wpspneed_xh */

/*
 * This file was generated by the SOM Compiler.
 * FileName: wpspneed.xh.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitxh: 1.11
 */
#ifndef wpspneed_mxh
#define wpspneed_mxh
class M_WPSpecialNeeds;

#define M_WPSpecialNeeds_MajorVersion 1
#define M_WPSpecialNeeds_MinorVersion 2

/* C++ som defs */
#include <somcls.xh>

/* C++ parent def */
#ifndef wpabs_xh
#include "wpabs.xh"
#endif

#ifndef M_WPSpecialNeeds_API
#define M_WPSpecialNeeds_API
/*
 * The Class API
 */

/* A procedure to create the M_WPSpecialNeeds Class */
SOMEXTERN SOMClass * SOMLINK M_WPSpecialNeedsNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* A macro to return the M_WPSpecialNeeds class object */
#define _M_WPSpecialNeeds ((SOMClass*)M_WPSpecialNeedsClassData.classObject)

/* The static interface to M_WPSpecialNeeds and its instances */
SOMEXTERN struct M_WPSpecialNeedsClassDataStructure {
	SOMClass *classObject;
} M_WPSpecialNeedsClassData;

/*
 * -- Typedefs for Procedures that support M_WPSpecialNeeds Methods
 */
extern "C" {
}


#endif /* M_WPSpecialNeeds_API */


/*
 * -- The C++ Wrapper Class for M_WPSpecialNeeds
 */
class M_WPSpecialNeeds : public M_WPAbstract
{
public:

void *operator new(size_t size)
{
   (void) size;
   if (!M_WPSpecialNeedsClassData.classObject) 
      M_WPSpecialNeedsNewClass(M_WPSpecialNeeds_MajorVersion,M_WPSpecialNeeds_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somResolve(SOM_TestCls((SOMAny *)(M_WPSpecialNeedsClassData.classObject),
                             SOMClassClassData.classObject),
                 SOMClassClassData.somNew))
         ((SOMClass*)(M_WPSpecialNeedsClassData.classObject));
}

void operator delete(void * obj)
{
   ((SOMObject *)obj)->somFree();
}


};   /* M_WPSpecialNeeds */



#endif       /* wpspneed_mxh */
