
/*
 * This file was generated by the SOM Compiler.
 * FileName: wprprint.xh.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitxh: 1.11
 */

/*
 * 
 *  Module Header
 * 
 *  Module Name: WPRPRINT
 * 
 *  OS/2 Presentation Manager Workplace class definitions
 * 
 *  Copyright (c) International Business Machines Corporation 1991, 1992
 * 
 */

#ifndef wprprint_xh
#define wprprint_xh
class WPRPrinter;

#define WPRPrinter_MajorVersion 1
#define WPRPrinter_MinorVersion 1

/* C++ som defs */
#include <somcls.xh>

/* C++ parent def */
#ifndef wpprint_xh
#include "wpprint.xh"
#endif

#ifndef WPRPrinter_API
#define WPRPrinter_API
/*
 * The Class API
 */

/* A procedure to create the WPRPrinter Class */
SOMEXTERN SOMClass * SOMLINK WPRPrinterNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* A macro to return the WPRPrinter class object */
class M_WPRPrinter;
#define _WPRPrinter ((M_WPRPrinter*)WPRPrinterClassData.classObject)

/* The static interface to WPRPrinter and its instances */
SOMEXTERN struct WPRPrinterClassDataStructure {
	SOMClass *classObject;
	somMToken wpSetResNetIdentity;
	somMToken wpQueryResNetIdentity;
	somMToken wpAddNetworkPage;
	somMToken wpCreateAnotherPrinter;
	somMToken wpNetworkConnect;
	somMToken wpNetworkDisconnect;
	somMToken wpNetworkLogoff;
	somMToken wpNetworkLogon;
	somMToken wpAuthenticate;
	somMToken wpQueryNetworkName;
	somMToken wpQueryServerName;
	somMToken wpQueryResourceName;
	somMToken wpParseNetId;
	somMToken wpAddObjectGeneralPage;
} WPRPrinterClassData;

/*
 * -- Typedefs for Procedures that support WPRPrinter Methods
 */
extern "C" {
}


#endif /* WPRPrinter_API */


/*
 * -- The C++ Wrapper Class for WPRPrinter
 */
class WPRPrinter : public WPPrinter
{
public:

void *operator new(size_t size)
{
   (void) size;
   if (!WPRPrinterClassData.classObject) 
      WPRPrinterNewClass(WPRPrinter_MajorVersion,WPRPrinter_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somResolve(SOM_TestCls((SOMAny *)(WPRPrinterClassData.classObject),
                             SOMClassClassData.classObject),
                 SOMClassClassData.somNew))
         ((SOMClass*)(WPRPrinterClassData.classObject));
}

void operator delete(void * obj)
{
   ((SOMObject *)obj)->somFree();
}


};   /* WPRPrinter */



#endif       /* wprprint_xh */

/*
 * This file was generated by the SOM Compiler.
 * FileName: wprprint.xh.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitxh: 1.11
 */
#ifndef wprprint_mxh
#define wprprint_mxh
class M_WPRPrinter;

#define M_WPRPrinter_MajorVersion 1
#define M_WPRPrinter_MinorVersion 1

/* C++ som defs */
#include <somcls.xh>

/* C++ parent def */
#ifndef wpprint_xh
#include "wpprint.xh"
#endif

#ifndef M_WPRPrinter_API
#define M_WPRPrinter_API
/*
 * The Class API
 */

/* A procedure to create the M_WPRPrinter Class */
SOMEXTERN SOMClass * SOMLINK M_WPRPrinterNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* A macro to return the M_WPRPrinter class object */
#define _M_WPRPrinter ((SOMClass*)M_WPRPrinterClassData.classObject)

/* The static interface to M_WPRPrinter and its instances */
SOMEXTERN struct M_WPRPrinterClassDataStructure {
	SOMClass *classObject;
} M_WPRPrinterClassData;

/*
 * -- Typedefs for Procedures that support M_WPRPrinter Methods
 */
extern "C" {
}


#endif /* M_WPRPrinter_API */


/*
 * -- The C++ Wrapper Class for M_WPRPrinter
 */
class M_WPRPrinter : public M_WPPrinter
{
public:

void *operator new(size_t size)
{
   (void) size;
   if (!M_WPRPrinterClassData.classObject) 
      M_WPRPrinterNewClass(M_WPRPrinter_MajorVersion,M_WPRPrinter_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somResolve(SOM_TestCls((SOMAny *)(M_WPRPrinterClassData.classObject),
                             SOMClassClassData.classObject),
                 SOMClassClassData.somNew))
         ((SOMClass*)(M_WPRPrinterClassData.classObject));
}

void operator delete(void * obj)
{
   ((SOMObject *)obj)->somFree();
}


};   /* M_WPRPrinter */



#endif       /* wprprint_mxh */
