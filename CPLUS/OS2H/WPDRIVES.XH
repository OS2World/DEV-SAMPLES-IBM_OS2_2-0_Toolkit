
/*
 * This file was generated by the SOM Compiler.
 * FileName: wpdrives.xh.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitxh: 1.11
 */

/*
 * 
 *  Module Header
 * 
 *  Module Name: WPDRIVES
 * 
 *  OS/2 Presentation Manager Workplace class definitions
 * 
 *  Copyright (c) International Business Machines Corporation 1991, 1992
 * 
 */

#ifndef wpdrives_xh
#define wpdrives_xh
class WPDrives;

#define WPDrives_MajorVersion 1
#define WPDrives_MinorVersion 2

/* C++ som defs */
#include <somcls.xh>

/* C++ parent def */
#ifndef wpfolder_xh
#include "wpfolder.xh"
#endif

#ifndef WPDrives_API
#define WPDrives_API
/*
 * The Class API
 */

/* A procedure to create the WPDrives Class */
SOMEXTERN SOMClass * SOMLINK WPDrivesNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* A macro to return the WPDrives class object */
class M_WPDrives;
#define _WPDrives ((M_WPDrives*)WPDrivesClassData.classObject)

/* The static interface to WPDrives and its instances */
SOMEXTERN struct WPDrivesClassDataStructure {
	SOMClass *classObject;
} WPDrivesClassData;

/*
 * -- Typedefs for Procedures that support WPDrives Methods
 */
extern "C" {
}


#endif /* WPDrives_API */


/*
 * -- The C++ Wrapper Class for WPDrives
 */
class WPDrives : public WPFolder
{
public:

void *operator new(size_t size)
{
   (void) size;
   if (!WPDrivesClassData.classObject) 
      WPDrivesNewClass(WPDrives_MajorVersion,WPDrives_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somResolve(SOM_TestCls((SOMAny *)(WPDrivesClassData.classObject),
                             SOMClassClassData.classObject),
                 SOMClassClassData.somNew))
         ((SOMClass*)(WPDrivesClassData.classObject));
}

void operator delete(void * obj)
{
   ((SOMObject *)obj)->somFree();
}


};   /* WPDrives */



#endif       /* wpdrives_xh */

/*
 * This file was generated by the SOM Compiler.
 * FileName: wpdrives.xh.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitxh: 1.11
 */
#ifndef wpdrives_mxh
#define wpdrives_mxh
class M_WPDrives;

#define M_WPDrives_MajorVersion 1
#define M_WPDrives_MinorVersion 2

/* C++ som defs */
#include <somcls.xh>

/* C++ parent def */
#ifndef wpfolder_xh
#include "wpfolder.xh"
#endif

#ifndef M_WPDrives_API
#define M_WPDrives_API
/*
 * The Class API
 */

/* A procedure to create the M_WPDrives Class */
SOMEXTERN SOMClass * SOMLINK M_WPDrivesNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* A macro to return the M_WPDrives class object */
#define _M_WPDrives ((SOMClass*)M_WPDrivesClassData.classObject)

/* The static interface to M_WPDrives and its instances */
SOMEXTERN struct M_WPDrivesClassDataStructure {
	SOMClass *classObject;
} M_WPDrivesClassData;

/*
 * -- Typedefs for Procedures that support M_WPDrives Methods
 */
extern "C" {
}


#endif /* M_WPDrives_API */


/*
 * -- The C++ Wrapper Class for M_WPDrives
 */
class M_WPDrives : public M_WPFolder
{
public:

void *operator new(size_t size)
{
   (void) size;
   if (!M_WPDrivesClassData.classObject) 
      M_WPDrivesNewClass(M_WPDrives_MajorVersion,M_WPDrives_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somResolve(SOM_TestCls((SOMAny *)(M_WPDrivesClassData.classObject),
                             SOMClassClassData.classObject),
                 SOMClassClassData.somNew))
         ((SOMClass*)(M_WPDrivesClassData.classObject));
}

void operator delete(void * obj)
{
   ((SOMObject *)obj)->somFree();
}


};   /* M_WPDrives */



#endif       /* wpdrives_mxh */
