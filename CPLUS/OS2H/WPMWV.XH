
/*
 * This file was generated by the SOM Compiler.
 * FileName: wpmwv.xh.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitxh: 1.11
 */
#ifndef wpmwv_xh
#define wpmwv_xh
class WPMinWinViewer;

#define WPMinWinViewer_MajorVersion 1
#define WPMinWinViewer_MinorVersion 2

/* C++ som defs */
#include <somcls.xh>

/* C++ parent def */
#ifndef wpfolder_xh
#include "wpfolder.xh"
#endif

/*
 * Passthru lines: File: "C.xh", "after"
 */

    typedef struct _MINWINDATA {
      HWND hwndFrame;
      WPObject *Object;
      WPObject *MinWinObject;
      ULONG  ulState;
      ULONG  ulMinimized;
      struct _MINWINDATA *pNext;
    } MINWINDATA, *PMINWINDATA;

    ULONG ProcessMinWinMsg(ULONG ulMsg,MPARAM mp1,MPARAM mp2);
    PMINWINDATA AddMinWindow(VOID);
    PMINWINDATA FindMinWindow(HWND hwndFrame);
    BOOL RemoveMinWindow(HWND  hwndFrame);
    BOOL ChangeMinWindowState(WPObject *Object,ULONG ulState);

    #define SYS_DEFAULT 1
    #define OBJ_DEFAULT 2
    /* ulType is SYS_DEFAULT or OBJ_DEFAULT */
    BOOL RelocateObjectMinWindows(WPObject *Object,ULONG ulMoveFrom,
                                  ULONG ulMoveTo,ULONG ulType);
    VOID RelocateMinWindow(PMINWINDATA pMinWindow,ULONG ulMoveFrom,
                                  ULONG ulMoveTo);

    WPObject * CreateMinWinObject(HWND hwndFrame,WPObject *Object);


#ifndef WPMinWinViewer_API
#define WPMinWinViewer_API
/*
 * The Class API
 */

/* A procedure to create the WPMinWinViewer Class */
SOMEXTERN SOMClass * SOMLINK WPMinWinViewerNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* A macro to return the WPMinWinViewer class object */
class M_WPMinWinViewer;
#define _WPMinWinViewer ((M_WPMinWinViewer*)WPMinWinViewerClassData.classObject)

/* The static interface to WPMinWinViewer and its instances */
SOMEXTERN struct WPMinWinViewerClassDataStructure {
	SOMClass *classObject;
	somMToken wpFindMinWindow;
} WPMinWinViewerClassData;

/*
 * -- Typedefs for Procedures that support WPMinWinViewer Methods
 */
extern "C" {
typedef WPObject *   (SOMLINK *somTD_WPMinWinViewer_wpFindMinWindow)(WPMinWinViewer *somSelf,HWND hwndFrame);
}


#endif /* WPMinWinViewer_API */


/*
 * -- The C++ Wrapper Class for WPMinWinViewer
 */
class WPMinWinViewer : public WPFolder
{
public:

void *operator new(size_t size)
{
   (void) size;
   if (!WPMinWinViewerClassData.classObject) 
      WPMinWinViewerNewClass(WPMinWinViewer_MajorVersion,WPMinWinViewer_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somResolve(SOM_TestCls((SOMAny *)(WPMinWinViewerClassData.classObject),
                             SOMClassClassData.classObject),
                 SOMClassClassData.somNew))
         ((SOMClass*)(WPMinWinViewerClassData.classObject));
}

void operator delete(void * obj)
{
   ((SOMObject *)obj)->somFree();
}

/* public method: wpFindMinWindow */
WPObject *   wpFindMinWindow(HWND hwndFrame)
{
   return (WPObject*) SOM_Resolve((SOMAny *)this,WPMinWinViewer,wpFindMinWindow)
	(this,hwndFrame);
}



};   /* WPMinWinViewer */



#endif       /* wpmwv_xh */

/*
 * This file was generated by the SOM Compiler.
 * FileName: wpmwv.xh.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitxh: 1.11
 */
#ifndef wpmwv_mxh
#define wpmwv_mxh
class M_WPMinWinViewer;

#define M_WPMinWinViewer_MajorVersion 1
#define M_WPMinWinViewer_MinorVersion 2

/* C++ som defs */
#include <somcls.xh>

/* C++ parent def */
#ifndef wpfolder_xh
#include "wpfolder.xh"
#endif

#ifndef M_WPMinWinViewer_API
#define M_WPMinWinViewer_API
/*
 * The Class API
 */

/* A procedure to create the M_WPMinWinViewer Class */
SOMEXTERN SOMClass * SOMLINK M_WPMinWinViewerNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* A macro to return the M_WPMinWinViewer class object */
#define _M_WPMinWinViewer ((SOMClass*)M_WPMinWinViewerClassData.classObject)

/* The static interface to M_WPMinWinViewer and its instances */
SOMEXTERN struct M_WPMinWinViewerClassDataStructure {
	SOMClass *classObject;
} M_WPMinWinViewerClassData;

/*
 * -- Typedefs for Procedures that support M_WPMinWinViewer Methods
 */
extern "C" {
}


#endif /* M_WPMinWinViewer_API */


/*
 * -- The C++ Wrapper Class for M_WPMinWinViewer
 */
class M_WPMinWinViewer : public M_WPFolder
{
public:

void *operator new(size_t size)
{
   (void) size;
   if (!M_WPMinWinViewerClassData.classObject) 
      M_WPMinWinViewerNewClass(M_WPMinWinViewer_MajorVersion,M_WPMinWinViewer_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somResolve(SOM_TestCls((SOMAny *)(M_WPMinWinViewerClassData.classObject),
                             SOMClassClassData.classObject),
                 SOMClassClassData.somNew))
         ((SOMClass*)(M_WPMinWinViewerClassData.classObject));
}

void operator delete(void * obj)
{
   ((SOMObject *)obj)->somFree();
}


};   /* M_WPMinWinViewer */



#endif       /* wpmwv_mxh */
