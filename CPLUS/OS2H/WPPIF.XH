
/*
 * This file was generated by the SOM Compiler.
 * FileName: wppif.xh.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitxh: 1.11
 */

/*
 * 
 *  Module Header
 * 
 *  Module Name: WPPIF
 * 
 *  OS/2 Presentation Manager Workplace class definitions
 * 
 *  Copyright (c) International Business Machines Corporation 1991, 1992
 * 
 */

#ifndef wppif_xh
#define wppif_xh
class WPPif;

#define WPPif_MajorVersion 1
#define WPPif_MinorVersion 2

/* C++ som defs */
#include <somcls.xh>

/* C++ parent def */
#ifndef wpdataf_xh
#include "wpdataf.xh"
#endif

#ifndef WPPif_API
#define WPPif_API
/*
 * The Class API
 */

/* A procedure to create the WPPif Class */
SOMEXTERN SOMClass * SOMLINK WPPifNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* A macro to return the WPPif class object */
class M_WPPif;
#define _WPPif ((M_WPPif*)WPPifClassData.classObject)

/* The static interface to WPPif and its instances */
SOMEXTERN struct WPPifClassDataStructure {
	SOMClass *classObject;
} WPPifClassData;

/*
 * -- Typedefs for Procedures that support WPPif Methods
 */
extern "C" {
}


#endif /* WPPif_API */


/*
 * -- The C++ Wrapper Class for WPPif
 */
class WPPif : public WPDataFile
{
public:

void *operator new(size_t size)
{
   (void) size;
   if (!WPPifClassData.classObject) 
      WPPifNewClass(WPPif_MajorVersion,WPPif_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somResolve(SOM_TestCls((SOMAny *)(WPPifClassData.classObject),
                             SOMClassClassData.classObject),
                 SOMClassClassData.somNew))
         ((SOMClass*)(WPPifClassData.classObject));
}

void operator delete(void * obj)
{
   ((SOMObject *)obj)->somFree();
}


};   /* WPPif */



#endif       /* wppif_xh */

/*
 * This file was generated by the SOM Compiler.
 * FileName: wppif.xh.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitxh: 1.11
 */
#ifndef wppif_mxh
#define wppif_mxh
class M_WPPif;

#define M_WPPif_MajorVersion 1
#define M_WPPif_MinorVersion 2

/* C++ som defs */
#include <somcls.xh>

/* C++ parent def */
#ifndef wpdataf_xh
#include "wpdataf.xh"
#endif

#ifndef M_WPPif_API
#define M_WPPif_API
/*
 * The Class API
 */

/* A procedure to create the M_WPPif Class */
SOMEXTERN SOMClass * SOMLINK M_WPPifNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* A macro to return the M_WPPif class object */
#define _M_WPPif ((SOMClass*)M_WPPifClassData.classObject)

/* The static interface to M_WPPif and its instances */
SOMEXTERN struct M_WPPifClassDataStructure {
	SOMClass *classObject;
} M_WPPifClassData;

/*
 * -- Typedefs for Procedures that support M_WPPif Methods
 */
extern "C" {
}


#endif /* M_WPPif_API */


/*
 * -- The C++ Wrapper Class for M_WPPif
 */
class M_WPPif : public M_WPDataFile
{
public:

void *operator new(size_t size)
{
   (void) size;
   if (!M_WPPifClassData.classObject) 
      M_WPPifNewClass(M_WPPif_MajorVersion,M_WPPif_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somResolve(SOM_TestCls((SOMAny *)(M_WPPifClassData.classObject),
                             SOMClassClassData.classObject),
                 SOMClassClassData.somNew))
         ((SOMClass*)(M_WPPifClassData.classObject));
}

void operator delete(void * obj)
{
   ((SOMObject *)obj)->somFree();
}


};   /* M_WPPif */



#endif       /* wppif_mxh */
