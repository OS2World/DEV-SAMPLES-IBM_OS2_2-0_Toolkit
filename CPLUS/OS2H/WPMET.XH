
/*
 * This file was generated by the SOM Compiler.
 * FileName: wpmet.xh.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitxh: 1.11
 */

/*
 * 
 *  Module Header
 * 
 *  Module Name: WPMET
 * 
 *  OS/2 Presentation Manager Workplace class definitions
 * 
 *  Copyright (c) International Business Machines Corporation 1991, 1992
 * 
 */

#ifndef wpmet_xh
#define wpmet_xh
class WPMet;

#define WPMet_MajorVersion 1
#define WPMet_MinorVersion 2

/* C++ som defs */
#include <somcls.xh>

/* C++ parent def */
#ifndef wpdataf_xh
#include "wpdataf.xh"
#endif

#ifndef WPMet_API
#define WPMet_API
/*
 * The Class API
 */

/* A procedure to create the WPMet Class */
SOMEXTERN SOMClass * SOMLINK WPMetNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* A macro to return the WPMet class object */
class M_WPMet;
#define _WPMet ((M_WPMet*)WPMetClassData.classObject)

/* The static interface to WPMet and its instances */
SOMEXTERN struct WPMetClassDataStructure {
	SOMClass *classObject;
} WPMetClassData;

/*
 * -- Typedefs for Procedures that support WPMet Methods
 */
extern "C" {
}


#endif /* WPMet_API */


/*
 * -- The C++ Wrapper Class for WPMet
 */
class WPMet : public WPDataFile
{
public:

void *operator new(size_t size)
{
   (void) size;
   if (!WPMetClassData.classObject) 
      WPMetNewClass(WPMet_MajorVersion,WPMet_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somResolve(SOM_TestCls((SOMAny *)(WPMetClassData.classObject),
                             SOMClassClassData.classObject),
                 SOMClassClassData.somNew))
         ((SOMClass*)(WPMetClassData.classObject));
}

void operator delete(void * obj)
{
   ((SOMObject *)obj)->somFree();
}


};   /* WPMet */



#endif       /* wpmet_xh */

/*
 * This file was generated by the SOM Compiler.
 * FileName: wpmet.xh.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitxh: 1.11
 */
#ifndef wpmet_mxh
#define wpmet_mxh
class M_WPMet;

#define M_WPMet_MajorVersion 1
#define M_WPMet_MinorVersion 2

/* C++ som defs */
#include <somcls.xh>

/* C++ parent def */
#ifndef wpdataf_xh
#include "wpdataf.xh"
#endif

#ifndef M_WPMet_API
#define M_WPMet_API
/*
 * The Class API
 */

/* A procedure to create the M_WPMet Class */
SOMEXTERN SOMClass * SOMLINK M_WPMetNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* A macro to return the M_WPMet class object */
#define _M_WPMet ((SOMClass*)M_WPMetClassData.classObject)

/* The static interface to M_WPMet and its instances */
SOMEXTERN struct M_WPMetClassDataStructure {
	SOMClass *classObject;
} M_WPMetClassData;

/*
 * -- Typedefs for Procedures that support M_WPMet Methods
 */
extern "C" {
}


#endif /* M_WPMet_API */


/*
 * -- The C++ Wrapper Class for M_WPMet
 */
class M_WPMet : public M_WPDataFile
{
public:

void *operator new(size_t size)
{
   (void) size;
   if (!M_WPMetClassData.classObject) 
      M_WPMetNewClass(M_WPMet_MajorVersion,M_WPMet_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somResolve(SOM_TestCls((SOMAny *)(M_WPMetClassData.classObject),
                             SOMClassClassData.classObject),
                 SOMClassClassData.somNew))
         ((SOMClass*)(M_WPMetClassData.classObject));
}

void operator delete(void * obj)
{
   ((SOMObject *)obj)->somFree();
}


};   /* M_WPMet */



#endif       /* wpmet_mxh */
