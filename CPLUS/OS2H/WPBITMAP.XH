
/*
 * This file was generated by the SOM Compiler.
 * FileName: wpbitmap.xh.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitxh: 1.11
 */

/*
 * 
 *  Module Header
 * 
 *  Module Name: WPBITMAP
 * 
 *  OS/2 Presentation Manager Workplace class definitions
 * 
 *  Copyright (c) International Business Machines Corporation 1991, 1992
 * 
 */

#ifndef wpbitmap_xh
#define wpbitmap_xh
class WPBitmap;

#define WPBitmap_MajorVersion 1
#define WPBitmap_MinorVersion 2

/* C++ som defs */
#include <somcls.xh>

/* C++ parent def */
#ifndef wpdataf_xh
#include "wpdataf.xh"
#endif

#ifndef WPBitmap_API
#define WPBitmap_API
/*
 * The Class API
 */

/* A procedure to create the WPBitmap Class */
SOMEXTERN SOMClass * SOMLINK WPBitmapNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* A macro to return the WPBitmap class object */
class M_WPBitmap;
#define _WPBitmap ((M_WPBitmap*)WPBitmapClassData.classObject)

/* The static interface to WPBitmap and its instances */
SOMEXTERN struct WPBitmapClassDataStructure {
	SOMClass *classObject;
} WPBitmapClassData;

/*
 * -- Typedefs for Procedures that support WPBitmap Methods
 */
extern "C" {
}


#endif /* WPBitmap_API */


/*
 * -- The C++ Wrapper Class for WPBitmap
 */
class WPBitmap : public WPDataFile
{
public:

void *operator new(size_t size)
{
   (void) size;
   if (!WPBitmapClassData.classObject) 
      WPBitmapNewClass(WPBitmap_MajorVersion,WPBitmap_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somResolve(SOM_TestCls((SOMAny *)(WPBitmapClassData.classObject),
                             SOMClassClassData.classObject),
                 SOMClassClassData.somNew))
         ((SOMClass*)(WPBitmapClassData.classObject));
}

void operator delete(void * obj)
{
   ((SOMObject *)obj)->somFree();
}


};   /* WPBitmap */



#endif       /* wpbitmap_xh */

/*
 * This file was generated by the SOM Compiler.
 * FileName: wpbitmap.xh.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitxh: 1.11
 */
#ifndef wpbitmap_mxh
#define wpbitmap_mxh
class M_WPBitmap;

#define M_WPBitmap_MajorVersion 1
#define M_WPBitmap_MinorVersion 2

/* C++ som defs */
#include <somcls.xh>

/* C++ parent def */
#ifndef wpdataf_xh
#include "wpdataf.xh"
#endif

#ifndef M_WPBitmap_API
#define M_WPBitmap_API
/*
 * The Class API
 */

/* A procedure to create the M_WPBitmap Class */
SOMEXTERN SOMClass * SOMLINK M_WPBitmapNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* A macro to return the M_WPBitmap class object */
#define _M_WPBitmap ((SOMClass*)M_WPBitmapClassData.classObject)

/* The static interface to M_WPBitmap and its instances */
SOMEXTERN struct M_WPBitmapClassDataStructure {
	SOMClass *classObject;
} M_WPBitmapClassData;

/*
 * -- Typedefs for Procedures that support M_WPBitmap Methods
 */
extern "C" {
}


#endif /* M_WPBitmap_API */


/*
 * -- The C++ Wrapper Class for M_WPBitmap
 */
class M_WPBitmap : public M_WPDataFile
{
public:

void *operator new(size_t size)
{
   (void) size;
   if (!M_WPBitmapClassData.classObject) 
      M_WPBitmapNewClass(M_WPBitmap_MajorVersion,M_WPBitmap_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somResolve(SOM_TestCls((SOMAny *)(M_WPBitmapClassData.classObject),
                             SOMClassClassData.classObject),
                 SOMClassClassData.somNew))
         ((SOMClass*)(M_WPBitmapClassData.classObject));
}

void operator delete(void * obj)
{
   ((SOMObject *)obj)->somFree();
}


};   /* M_WPBitmap */



#endif       /* wpbitmap_mxh */
