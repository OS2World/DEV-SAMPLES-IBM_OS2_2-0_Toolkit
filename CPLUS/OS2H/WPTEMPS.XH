
/*
 * This file was generated by the SOM Compiler.
 * FileName: wptemps.xh.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitxh: 1.11
 */

/*
 * 
 *  Module Header
 * 
 *  Module Name: WPTEMPS
 * 
 *  OS/2 Presentation Manager Workplace class definitions
 * 
 *  Copyright (c) International Business Machines Corporation 1991, 1992
 * 
 */

#ifndef wptemps_xh
#define wptemps_xh
class WPTemplates;

#define WPTemplates_MajorVersion 1
#define WPTemplates_MinorVersion 2

/* C++ som defs */
#include <somcls.xh>

/* C++ parent def */
#ifndef wpfolder_xh
#include "wpfolder.xh"
#endif

#ifndef WPTemplates_API
#define WPTemplates_API
/*
 * The Class API
 */

/* A procedure to create the WPTemplates Class */
SOMEXTERN SOMClass * SOMLINK WPTemplatesNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* A macro to return the WPTemplates class object */
class M_WPTemplates;
#define _WPTemplates ((M_WPTemplates*)WPTemplatesClassData.classObject)

/* The static interface to WPTemplates and its instances */
SOMEXTERN struct WPTemplatesClassDataStructure {
	SOMClass *classObject;
} WPTemplatesClassData;

/*
 * -- Typedefs for Procedures that support WPTemplates Methods
 */
extern "C" {
}


#endif /* WPTemplates_API */


/*
 * -- The C++ Wrapper Class for WPTemplates
 */
class WPTemplates : public WPFolder
{
public:

void *operator new(size_t size)
{
   (void) size;
   if (!WPTemplatesClassData.classObject) 
      WPTemplatesNewClass(WPTemplates_MajorVersion,WPTemplates_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somResolve(SOM_TestCls((SOMAny *)(WPTemplatesClassData.classObject),
                             SOMClassClassData.classObject),
                 SOMClassClassData.somNew))
         ((SOMClass*)(WPTemplatesClassData.classObject));
}

void operator delete(void * obj)
{
   ((SOMObject *)obj)->somFree();
}


};   /* WPTemplates */



#endif       /* wptemps_xh */

/*
 * This file was generated by the SOM Compiler.
 * FileName: wptemps.xh.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitxh: 1.11
 */
#ifndef wptemps_mxh
#define wptemps_mxh
class M_WPTemplates;

#define M_WPTemplates_MajorVersion 1
#define M_WPTemplates_MinorVersion 2

/* C++ som defs */
#include <somcls.xh>

/* C++ parent def */
#ifndef wpfolder_xh
#include "wpfolder.xh"
#endif

#ifndef M_WPTemplates_API
#define M_WPTemplates_API
/*
 * The Class API
 */

/* A procedure to create the M_WPTemplates Class */
SOMEXTERN SOMClass * SOMLINK M_WPTemplatesNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* A macro to return the M_WPTemplates class object */
#define _M_WPTemplates ((SOMClass*)M_WPTemplatesClassData.classObject)

/* The static interface to M_WPTemplates and its instances */
SOMEXTERN struct M_WPTemplatesClassDataStructure {
	SOMClass *classObject;
} M_WPTemplatesClassData;

/*
 * -- Typedefs for Procedures that support M_WPTemplates Methods
 */
extern "C" {
}


#endif /* M_WPTemplates_API */


/*
 * -- The C++ Wrapper Class for M_WPTemplates
 */
class M_WPTemplates : public M_WPFolder
{
public:

void *operator new(size_t size)
{
   (void) size;
   if (!M_WPTemplatesClassData.classObject) 
      M_WPTemplatesNewClass(M_WPTemplates_MajorVersion,M_WPTemplates_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somResolve(SOM_TestCls((SOMAny *)(M_WPTemplatesClassData.classObject),
                             SOMClassClassData.classObject),
                 SOMClassClassData.somNew))
         ((SOMClass*)(M_WPTemplatesClassData.classObject));
}

void operator delete(void * obj)
{
   ((SOMObject *)obj)->somFree();
}


};   /* M_WPTemplates */



#endif       /* wptemps_mxh */
