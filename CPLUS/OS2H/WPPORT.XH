
/*
 * This file was generated by the SOM Compiler.
 * FileName: wpport.xh.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitxh: 1.11
 */

/*
 * 
 *  Module Header
 * 
 *  Module Name: WPPORT
 * 
 *  OS/2 Presentation Manager Workplace class definitions
 * 
 *  Copyright (c) International Business Machines Corporation 1991, 1992
 * 
 */

#ifndef wpport_xh
#define wpport_xh
class WPPort;

#define WPPort_MajorVersion 1
#define WPPort_MinorVersion 1

/* C++ som defs */
#include <somcls.xh>

/* C++ parent def */
#ifndef wptrans_xh
#include "wptrans.xh"
#endif

#ifndef WPPort_API
#define WPPort_API
/*
 * The Class API
 */

/* A procedure to create the WPPort Class */
SOMEXTERN SOMClass * SOMLINK WPPortNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* A macro to return the WPPort class object */
class M_WPPort;
#define _WPPort ((M_WPPort*)WPPortClassData.classObject)

/* The static interface to WPPort and its instances */
SOMEXTERN struct WPPortClassDataStructure {
	SOMClass *classObject;
	somMToken prtGetPortInfo;
	somMToken prtSetPortInfo;
	somMToken prtSettings;
	somMToken prtGetDeviceObject;
	somMToken prtSetPortDiscardhwndDlg;
	somMToken prtSetPortInstallhwndDlg;
	somMToken prtPrintPort;
	somMToken prtSetIcon;
	somMToken prtChangePort;
} WPPortClassData;

/*
 * -- Typedefs for Procedures that support WPPort Methods
 */
extern "C" {
}


#endif /* WPPort_API */


/*
 * -- The C++ Wrapper Class for WPPort
 */
class WPPort : public WPTransient
{
public:

void *operator new(size_t size)
{
   (void) size;
   if (!WPPortClassData.classObject) 
      WPPortNewClass(WPPort_MajorVersion,WPPort_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somResolve(SOM_TestCls((SOMAny *)(WPPortClassData.classObject),
                             SOMClassClassData.classObject),
                 SOMClassClassData.somNew))
         ((SOMClass*)(WPPortClassData.classObject));
}

void operator delete(void * obj)
{
   ((SOMObject *)obj)->somFree();
}


};   /* WPPort */



#endif       /* wpport_xh */

/*
 * This file was generated by the SOM Compiler.
 * FileName: wpport.xh.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitxh: 1.11
 */
#ifndef wpport_mxh
#define wpport_mxh
class M_WPPort;

#define M_WPPort_MajorVersion 1
#define M_WPPort_MinorVersion 1

/* C++ som defs */
#include <somcls.xh>

/* C++ parent def */
#ifndef wptrans_xh
#include "wptrans.xh"
#endif

#ifndef M_WPPort_API
#define M_WPPort_API
/*
 * The Class API
 */

/* A procedure to create the M_WPPort Class */
SOMEXTERN SOMClass * SOMLINK M_WPPortNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* A macro to return the M_WPPort class object */
#define _M_WPPort ((SOMClass*)M_WPPortClassData.classObject)

/* The static interface to M_WPPort and its instances */
SOMEXTERN struct M_WPPortClassDataStructure {
	SOMClass *classObject;
} M_WPPortClassData;

/*
 * -- Typedefs for Procedures that support M_WPPort Methods
 */
extern "C" {
}


#endif /* M_WPPort_API */


/*
 * -- The C++ Wrapper Class for M_WPPort
 */
class M_WPPort : public M_WPTransient
{
public:

void *operator new(size_t size)
{
   (void) size;
   if (!M_WPPortClassData.classObject) 
      M_WPPortNewClass(M_WPPort_MajorVersion,M_WPPort_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somResolve(SOM_TestCls((SOMAny *)(M_WPPortClassData.classObject),
                             SOMClassClassData.classObject),
                 SOMClassClassData.somNew))
         ((SOMClass*)(M_WPPortClassData.classObject));
}

void operator delete(void * obj)
{
   ((SOMObject *)obj)->somFree();
}


};   /* M_WPPort */



#endif       /* wpport_mxh */
