
/*
 * This file was generated by the SOM Compiler.
 * FileName: wpstart.xh.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitxh: 1.11
 */

/*
 * 
 *  Module Header
 * 
 *  Module Name: WPSTART
 * 
 *  OS/2 Presentation Manager Workplace class definitions
 * 
 *  Copyright (c) International Business Machines Corporation 1991, 1992
 * 
 */

#ifndef wpstart_xh
#define wpstart_xh
class WPStartup;

#define WPStartup_MajorVersion 1
#define WPStartup_MinorVersion 2

/* C++ som defs */
#include <somcls.xh>

/* C++ parent def */
#ifndef wpfolder_xh
#include "wpfolder.xh"
#endif

#ifndef WPStartup_API
#define WPStartup_API
/*
 * The Class API
 */

/* A procedure to create the WPStartup Class */
SOMEXTERN SOMClass * SOMLINK WPStartupNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* A macro to return the WPStartup class object */
class M_WPStartup;
#define _WPStartup ((M_WPStartup*)WPStartupClassData.classObject)

/* The static interface to WPStartup and its instances */
SOMEXTERN struct WPStartupClassDataStructure {
	SOMClass *classObject;
} WPStartupClassData;

/*
 * -- Typedefs for Procedures that support WPStartup Methods
 */
extern "C" {
}


#endif /* WPStartup_API */


/*
 * -- The C++ Wrapper Class for WPStartup
 */
class WPStartup : public WPFolder
{
public:

void *operator new(size_t size)
{
   (void) size;
   if (!WPStartupClassData.classObject) 
      WPStartupNewClass(WPStartup_MajorVersion,WPStartup_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somResolve(SOM_TestCls((SOMAny *)(WPStartupClassData.classObject),
                             SOMClassClassData.classObject),
                 SOMClassClassData.somNew))
         ((SOMClass*)(WPStartupClassData.classObject));
}

void operator delete(void * obj)
{
   ((SOMObject *)obj)->somFree();
}


};   /* WPStartup */



#endif       /* wpstart_xh */

/*
 * This file was generated by the SOM Compiler.
 * FileName: wpstart.xh.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitxh: 1.11
 */
#ifndef wpstart_mxh
#define wpstart_mxh
class M_WPStartup;

#define M_WPStartup_MajorVersion 1
#define M_WPStartup_MinorVersion 2

/* C++ som defs */
#include <somcls.xh>

/* C++ parent def */
#ifndef wpfolder_xh
#include "wpfolder.xh"
#endif

#ifndef M_WPStartup_API
#define M_WPStartup_API
/*
 * The Class API
 */

/* A procedure to create the M_WPStartup Class */
SOMEXTERN SOMClass * SOMLINK M_WPStartupNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* A macro to return the M_WPStartup class object */
#define _M_WPStartup ((SOMClass*)M_WPStartupClassData.classObject)

/* The static interface to M_WPStartup and its instances */
SOMEXTERN struct M_WPStartupClassDataStructure {
	SOMClass *classObject;
} M_WPStartupClassData;

/*
 * -- Typedefs for Procedures that support M_WPStartup Methods
 */
extern "C" {
}


#endif /* M_WPStartup_API */


/*
 * -- The C++ Wrapper Class for M_WPStartup
 */
class M_WPStartup : public M_WPFolder
{
public:

void *operator new(size_t size)
{
   (void) size;
   if (!M_WPStartupClassData.classObject) 
      M_WPStartupNewClass(M_WPStartup_MajorVersion,M_WPStartup_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somResolve(SOM_TestCls((SOMAny *)(M_WPStartupClassData.classObject),
                             SOMClassClassData.classObject),
                 SOMClassClassData.somNew))
         ((SOMClass*)(M_WPStartupClassData.classObject));
}

void operator delete(void * obj)
{
   ((SOMObject *)obj)->somFree();
}


};   /* M_WPStartup */



#endif       /* wpstart_mxh */
