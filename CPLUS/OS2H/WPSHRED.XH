
/*
 * This file was generated by the SOM Compiler.
 * FileName: wpshred.xh.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitxh: 1.11
 */

/*
 * 
 *  Module Header
 * 
 *  Module Name: WPSHRED
 * 
 *  OS/2 Presentation Manager Workplace class definitions
 * 
 *  Copyright (c) International Business Machines Corporation 1991, 1992
 * 
 */

#ifndef wpshred_xh
#define wpshred_xh
class WPShredder;

#define WPShredder_MajorVersion 1
#define WPShredder_MinorVersion 2

/* C++ som defs */
#include <somcls.xh>

/* C++ parent def */
#ifndef wpabs_xh
#include "wpabs.xh"
#endif

#ifndef WPShredder_API
#define WPShredder_API
/*
 * The Class API
 */

/* A procedure to create the WPShredder Class */
SOMEXTERN SOMClass * SOMLINK WPShredderNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* A macro to return the WPShredder class object */
class M_WPShredder;
#define _WPShredder ((M_WPShredder*)WPShredderClassData.classObject)

/* The static interface to WPShredder and its instances */
SOMEXTERN struct WPShredderClassDataStructure {
	SOMClass *classObject;
} WPShredderClassData;

/*
 * -- Typedefs for Procedures that support WPShredder Methods
 */
extern "C" {
}


#endif /* WPShredder_API */


/*
 * -- The C++ Wrapper Class for WPShredder
 */
class WPShredder : public WPAbstract
{
public:

void *operator new(size_t size)
{
   (void) size;
   if (!WPShredderClassData.classObject) 
      WPShredderNewClass(WPShredder_MajorVersion,WPShredder_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somResolve(SOM_TestCls((SOMAny *)(WPShredderClassData.classObject),
                             SOMClassClassData.classObject),
                 SOMClassClassData.somNew))
         ((SOMClass*)(WPShredderClassData.classObject));
}

void operator delete(void * obj)
{
   ((SOMObject *)obj)->somFree();
}


};   /* WPShredder */



#endif       /* wpshred_xh */

/*
 * This file was generated by the SOM Compiler.
 * FileName: wpshred.xh.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitxh: 1.11
 */
#ifndef wpshred_mxh
#define wpshred_mxh
class M_WPShredder;

#define M_WPShredder_MajorVersion 1
#define M_WPShredder_MinorVersion 2

/* C++ som defs */
#include <somcls.xh>

/* C++ parent def */
#ifndef wpabs_xh
#include "wpabs.xh"
#endif

#ifndef M_WPShredder_API
#define M_WPShredder_API
/*
 * The Class API
 */

/* A procedure to create the M_WPShredder Class */
SOMEXTERN SOMClass * SOMLINK M_WPShredderNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* A macro to return the M_WPShredder class object */
#define _M_WPShredder ((SOMClass*)M_WPShredderClassData.classObject)

/* The static interface to M_WPShredder and its instances */
SOMEXTERN struct M_WPShredderClassDataStructure {
	SOMClass *classObject;
} M_WPShredderClassData;

/*
 * -- Typedefs for Procedures that support M_WPShredder Methods
 */
extern "C" {
}


#endif /* M_WPShredder_API */


/*
 * -- The C++ Wrapper Class for M_WPShredder
 */
class M_WPShredder : public M_WPAbstract
{
public:

void *operator new(size_t size)
{
   (void) size;
   if (!M_WPShredderClassData.classObject) 
      M_WPShredderNewClass(M_WPShredder_MajorVersion,M_WPShredder_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somResolve(SOM_TestCls((SOMAny *)(M_WPShredderClassData.classObject),
                             SOMClassClassData.classObject),
                 SOMClassClassData.somNew))
         ((SOMClass*)(M_WPShredderClassData.classObject));
}

void operator delete(void * obj)
{
   ((SOMObject *)obj)->somFree();
}


};   /* M_WPShredder */



#endif       /* wpshred_mxh */
