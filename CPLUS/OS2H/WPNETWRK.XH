
/*
 * This file was generated by the SOM Compiler.
 * FileName: wpnetwrk.xh.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitxh: 1.11
 */

/*
 * 
 *  Module Header
 * 
 *  Module Name: WPNETWRK
 * 
 *  OS/2 Presentation Manager Workplace class definitions
 * 
 *  Copyright (c) International Business Machines Corporation 1991, 1992
 * 
 */

#ifndef wpnetwrk_xh
#define wpnetwrk_xh
class WPNetwork;

#define WPNetwork_MajorVersion 1
#define WPNetwork_MinorVersion 2

/* C++ som defs */
#include <somcls.xh>

/* C++ parent def */
#ifndef wpfolder_xh
#include "wpfolder.xh"
#endif

#ifndef WPNetwork_API
#define WPNetwork_API
/*
 * The Class API
 */

/* A procedure to create the WPNetwork Class */
SOMEXTERN SOMClass * SOMLINK WPNetworkNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* A macro to return the WPNetwork class object */
class M_WPNetwork;
#define _WPNetwork ((M_WPNetwork*)WPNetworkClassData.classObject)

/* The static interface to WPNetwork and its instances */
SOMEXTERN struct WPNetworkClassDataStructure {
	SOMClass *classObject;
} WPNetworkClassData;

/*
 * -- Typedefs for Procedures that support WPNetwork Methods
 */
extern "C" {
}


#endif /* WPNetwork_API */


/*
 * -- The C++ Wrapper Class for WPNetwork
 */
class WPNetwork : public WPFolder
{
public:

void *operator new(size_t size)
{
   (void) size;
   if (!WPNetworkClassData.classObject) 
      WPNetworkNewClass(WPNetwork_MajorVersion,WPNetwork_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somResolve(SOM_TestCls((SOMAny *)(WPNetworkClassData.classObject),
                             SOMClassClassData.classObject),
                 SOMClassClassData.somNew))
         ((SOMClass*)(WPNetworkClassData.classObject));
}

void operator delete(void * obj)
{
   ((SOMObject *)obj)->somFree();
}


};   /* WPNetwork */



#endif       /* wpnetwrk_xh */

/*
 * This file was generated by the SOM Compiler.
 * FileName: wpnetwrk.xh.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitxh: 1.11
 */
#ifndef wpnetwrk_mxh
#define wpnetwrk_mxh
class M_WPNetwork;

#define M_WPNetwork_MajorVersion 1
#define M_WPNetwork_MinorVersion 2

/* C++ som defs */
#include <somcls.xh>

/* C++ parent def */
#ifndef wpfolder_xh
#include "wpfolder.xh"
#endif

#ifndef M_WPNetwork_API
#define M_WPNetwork_API
/*
 * The Class API
 */

/* A procedure to create the M_WPNetwork Class */
SOMEXTERN SOMClass * SOMLINK M_WPNetworkNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* A macro to return the M_WPNetwork class object */
#define _M_WPNetwork ((SOMClass*)M_WPNetworkClassData.classObject)

/* The static interface to M_WPNetwork and its instances */
SOMEXTERN struct M_WPNetworkClassDataStructure {
	SOMClass *classObject;
} M_WPNetworkClassData;

/*
 * -- Typedefs for Procedures that support M_WPNetwork Methods
 */
extern "C" {
}


#endif /* M_WPNetwork_API */


/*
 * -- The C++ Wrapper Class for M_WPNetwork
 */
class M_WPNetwork : public M_WPFolder
{
public:

void *operator new(size_t size)
{
   (void) size;
   if (!M_WPNetworkClassData.classObject) 
      M_WPNetworkNewClass(M_WPNetwork_MajorVersion,M_WPNetwork_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somResolve(SOM_TestCls((SOMAny *)(M_WPNetworkClassData.classObject),
                             SOMClassClassData.classObject),
                 SOMClassClassData.somNew))
         ((SOMClass*)(M_WPNetworkClassData.classObject));
}

void operator delete(void * obj)
{
   ((SOMObject *)obj)->somFree();
}


};   /* M_WPNetwork */



#endif       /* wpnetwrk_mxh */
