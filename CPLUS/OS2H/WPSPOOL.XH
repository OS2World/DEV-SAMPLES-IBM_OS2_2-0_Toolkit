
/*
 * This file was generated by the SOM Compiler.
 * FileName: wpspool.xh.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitxh: 1.11
 */

/*
 * 
 *  Module Header
 * 
 *  Module Name: WPSPOOL
 * 
 *  OS/2 Presentation Manager Workplace class definitions
 * 
 *  Copyright (c) International Business Machines Corporation 1991, 1992
 * 
 */

#ifndef wpspool_xh
#define wpspool_xh
class WPSpool;

#define WPSpool_MajorVersion 1
#define WPSpool_MinorVersion 1

/* C++ som defs */
#include <somcls.xh>

/* C++ parent def */
#ifndef wpabs_xh
#include "wpabs.xh"
#endif

#ifndef WPSpool_API
#define WPSpool_API
/*
 * The Class API
 */

/* A procedure to create the WPSpool Class */
SOMEXTERN SOMClass * SOMLINK WPSpoolNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* A macro to return the WPSpool class object */
class M_WPSpool;
#define _WPSpool ((M_WPSpool*)WPSpoolClassData.classObject)

/* The static interface to WPSpool and its instances */
SOMEXTERN struct WPSpoolClassDataStructure {
	SOMClass *classObject;
	somMToken AddSetPathPage;
	somMToken AddSetPriorityPage;
} WPSpoolClassData;

/*
 * -- Typedefs for Procedures that support WPSpool Methods
 */
extern "C" {
}


#endif /* WPSpool_API */


/*
 * -- The C++ Wrapper Class for WPSpool
 */
class WPSpool : public WPAbstract
{
public:

void *operator new(size_t size)
{
   (void) size;
   if (!WPSpoolClassData.classObject) 
      WPSpoolNewClass(WPSpool_MajorVersion,WPSpool_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somResolve(SOM_TestCls((SOMAny *)(WPSpoolClassData.classObject),
                             SOMClassClassData.classObject),
                 SOMClassClassData.somNew))
         ((SOMClass*)(WPSpoolClassData.classObject));
}

void operator delete(void * obj)
{
   ((SOMObject *)obj)->somFree();
}


};   /* WPSpool */



#endif       /* wpspool_xh */

/*
 * This file was generated by the SOM Compiler.
 * FileName: wpspool.xh.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitxh: 1.11
 */
#ifndef wpspool_mxh
#define wpspool_mxh
class M_WPSpool;

#define M_WPSpool_MajorVersion 1
#define M_WPSpool_MinorVersion 1

/* C++ som defs */
#include <somcls.xh>

/* C++ parent def */
#ifndef wpabs_xh
#include "wpabs.xh"
#endif

#ifndef M_WPSpool_API
#define M_WPSpool_API
/*
 * The Class API
 */

/* A procedure to create the M_WPSpool Class */
SOMEXTERN SOMClass * SOMLINK M_WPSpoolNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* A macro to return the M_WPSpool class object */
#define _M_WPSpool ((SOMClass*)M_WPSpoolClassData.classObject)

/* The static interface to M_WPSpool and its instances */
SOMEXTERN struct M_WPSpoolClassDataStructure {
	SOMClass *classObject;
} M_WPSpoolClassData;

/*
 * -- Typedefs for Procedures that support M_WPSpool Methods
 */
extern "C" {
}


#endif /* M_WPSpool_API */


/*
 * -- The C++ Wrapper Class for M_WPSpool
 */
class M_WPSpool : public M_WPAbstract
{
public:

void *operator new(size_t size)
{
   (void) size;
   if (!M_WPSpoolClassData.classObject) 
      M_WPSpoolNewClass(M_WPSpool_MajorVersion,M_WPSpool_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somResolve(SOM_TestCls((SOMAny *)(M_WPSpoolClassData.classObject),
                             SOMClassClassData.classObject),
                 SOMClassClassData.somNew))
         ((SOMClass*)(M_WPSpoolClassData.classObject));
}

void operator delete(void * obj)
{
   ((SOMObject *)obj)->somFree();
}


};   /* M_WPSpool */



#endif       /* wpspool_mxh */
