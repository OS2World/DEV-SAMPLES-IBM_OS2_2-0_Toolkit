
/*
 * This file was generated by the SOM Compiler.
 * FileName: wpptr.xh.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitxh: 1.11
 */

/*
 * 
 *  Module Header
 * 
 *  Module Name: WPPTR
 * 
 *  OS/2 Presentation Manager Workplace class definitions
 * 
 *  Copyright (c) International Business Machines Corporation 1991, 1992
 * 
 */

#ifndef wpptr_xh
#define wpptr_xh
class WPPointer;

#define WPPointer_MajorVersion 1
#define WPPointer_MinorVersion 2

/* C++ som defs */
#include <somcls.xh>

/* C++ parent def */
#ifndef wpdataf_xh
#include "wpdataf.xh"
#endif

#ifndef WPPointer_API
#define WPPointer_API
/*
 * The Class API
 */

/* A procedure to create the WPPointer Class */
SOMEXTERN SOMClass * SOMLINK WPPointerNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* A macro to return the WPPointer class object */
class M_WPPointer;
#define _WPPointer ((M_WPPointer*)WPPointerClassData.classObject)

/* The static interface to WPPointer and its instances */
SOMEXTERN struct WPPointerClassDataStructure {
	SOMClass *classObject;
} WPPointerClassData;

/*
 * -- Typedefs for Procedures that support WPPointer Methods
 */
extern "C" {
}


#endif /* WPPointer_API */


/*
 * -- The C++ Wrapper Class for WPPointer
 */
class WPPointer : public WPDataFile
{
public:

void *operator new(size_t size)
{
   (void) size;
   if (!WPPointerClassData.classObject) 
      WPPointerNewClass(WPPointer_MajorVersion,WPPointer_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somResolve(SOM_TestCls((SOMAny *)(WPPointerClassData.classObject),
                             SOMClassClassData.classObject),
                 SOMClassClassData.somNew))
         ((SOMClass*)(WPPointerClassData.classObject));
}

void operator delete(void * obj)
{
   ((SOMObject *)obj)->somFree();
}


};   /* WPPointer */



#endif       /* wpptr_xh */

/*
 * This file was generated by the SOM Compiler.
 * FileName: wpptr.xh.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitxh: 1.11
 */
#ifndef wpptr_mxh
#define wpptr_mxh
class M_WPPointer;

#define M_WPPointer_MajorVersion 1
#define M_WPPointer_MinorVersion 2

/* C++ som defs */
#include <somcls.xh>

/* C++ parent def */
#ifndef wpdataf_xh
#include "wpdataf.xh"
#endif

#ifndef M_WPPointer_API
#define M_WPPointer_API
/*
 * The Class API
 */

/* A procedure to create the M_WPPointer Class */
SOMEXTERN SOMClass * SOMLINK M_WPPointerNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* A macro to return the M_WPPointer class object */
#define _M_WPPointer ((SOMClass*)M_WPPointerClassData.classObject)

/* The static interface to M_WPPointer and its instances */
SOMEXTERN struct M_WPPointerClassDataStructure {
	SOMClass *classObject;
} M_WPPointerClassData;

/*
 * -- Typedefs for Procedures that support M_WPPointer Methods
 */
extern "C" {
}


#endif /* M_WPPointer_API */


/*
 * -- The C++ Wrapper Class for M_WPPointer
 */
class M_WPPointer : public M_WPDataFile
{
public:

void *operator new(size_t size)
{
   (void) size;
   if (!M_WPPointerClassData.classObject) 
      M_WPPointerNewClass(M_WPPointer_MajorVersion,M_WPPointer_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somResolve(SOM_TestCls((SOMAny *)(M_WPPointerClassData.classObject),
                             SOMClassClassData.classObject),
                 SOMClassClassData.somNew))
         ((SOMClass*)(M_WPPointerClassData.classObject));
}

void operator delete(void * obj)
{
   ((SOMObject *)obj)->somFree();
}


};   /* M_WPPointer */



#endif       /* wpptr_mxh */
