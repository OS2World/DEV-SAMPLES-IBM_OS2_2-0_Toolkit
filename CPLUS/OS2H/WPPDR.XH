
/*
 * This file was generated by the SOM Compiler.
 * FileName: wppdr.xh.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitxh: 1.11
 */

/*
 * 
 *  Module Header
 * 
 *  Module Name: WPPDR
 * 
 *  OS/2 Presentation Manager Workplace class definitions
 * 
 *  Copyright (c) International Business Machines Corporation 1991, 1992
 * 
 */

#ifndef wppdr_xh
#define wppdr_xh
class WPPdr;

#define WPPdr_MajorVersion 1
#define WPPdr_MinorVersion 1

/* C++ som defs */
#include <somcls.xh>

/* C++ parent def */
#ifndef wptrans_xh
#include "wptrans.xh"
#endif

#ifndef WPPdr_API
#define WPPdr_API
/*
 * The Class API
 */

/* A procedure to create the WPPdr Class */
SOMEXTERN SOMClass * SOMLINK WPPdrNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* A macro to return the WPPdr class object */
class M_WPPdr;
#define _WPPdr ((M_WPPdr*)WPPdrClassData.classObject)

/* The static interface to WPPdr and its instances */
SOMEXTERN struct WPPdrClassDataStructure {
	SOMClass *classObject;
	somMToken prtGetPDriverInfo;
	somMToken prtSetPDriverInfo;
	somMToken prtGetPDriverName;
	somMToken prtGetPDeviceName;
	somMToken prtSetPdrIcon;
	somMToken prtSetPDriverDiscardhwndDlg;
	somMToken prtSetPDriverInstallhwndDlg;
} WPPdrClassData;

/*
 * -- Typedefs for Procedures that support WPPdr Methods
 */
extern "C" {
}


#endif /* WPPdr_API */


/*
 * -- The C++ Wrapper Class for WPPdr
 */
class WPPdr : public WPTransient
{
public:

void *operator new(size_t size)
{
   (void) size;
   if (!WPPdrClassData.classObject) 
      WPPdrNewClass(WPPdr_MajorVersion,WPPdr_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somResolve(SOM_TestCls((SOMAny *)(WPPdrClassData.classObject),
                             SOMClassClassData.classObject),
                 SOMClassClassData.somNew))
         ((SOMClass*)(WPPdrClassData.classObject));
}

void operator delete(void * obj)
{
   ((SOMObject *)obj)->somFree();
}


};   /* WPPdr */



#endif       /* wppdr_xh */

/*
 * This file was generated by the SOM Compiler.
 * FileName: wppdr.xh.
 * Generated using:
 *     SOM Precompiler spc: 1.22
 *     SOM Emitter emitxh: 1.11
 */
#ifndef wppdr_mxh
#define wppdr_mxh
class M_WPPdr;

#define M_WPPdr_MajorVersion 1
#define M_WPPdr_MinorVersion 1

/* C++ som defs */
#include <somcls.xh>

/* C++ parent def */
#ifndef wptrans_xh
#include "wptrans.xh"
#endif

#ifndef M_WPPdr_API
#define M_WPPdr_API
/*
 * The Class API
 */

/* A procedure to create the M_WPPdr Class */
SOMEXTERN SOMClass * SOMLINK M_WPPdrNewClass(
		integer4 majorVersion,
		integer4 minorVersion);

/* A macro to return the M_WPPdr class object */
#define _M_WPPdr ((SOMClass*)M_WPPdrClassData.classObject)

/* The static interface to M_WPPdr and its instances */
SOMEXTERN struct M_WPPdrClassDataStructure {
	SOMClass *classObject;
} M_WPPdrClassData;

/*
 * -- Typedefs for Procedures that support M_WPPdr Methods
 */
extern "C" {
}


#endif /* M_WPPdr_API */


/*
 * -- The C++ Wrapper Class for M_WPPdr
 */
class M_WPPdr : public M_WPTransient
{
public:

void *operator new(size_t size)
{
   (void) size;
   if (!M_WPPdrClassData.classObject) 
      M_WPPdrNewClass(M_WPPdr_MajorVersion,M_WPPdr_MinorVersion);
   return (void *)
      ((somTD_SOMClass_somNew)
      somResolve(SOM_TestCls((SOMAny *)(M_WPPdrClassData.classObject),
                             SOMClassClassData.classObject),
                 SOMClassClassData.somNew))
         ((SOMClass*)(M_WPPdrClassData.classObject));
}

void operator delete(void * obj)
{
   ((SOMObject *)obj)->somFree();
}


};   /* M_WPPdr */



#endif       /* wppdr_mxh */
